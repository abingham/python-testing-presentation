* TODO pytest interpolation example
  Can we do this with a code cell? Or does it need to stay as markdown?
* TODO Figure out underscore display problem
  When displaying dunders (or any underscore), the underscores are hidden by
  subsequent lines of text. Probably a CSS issue.
* Before presenting
** Run the "prep_tests.sh" script
   Alternatively, do this manually
*** "run all cells" for each presentation
   This ensures that the markdown is rendered ahead of time
*** Clear output for each presentation

   This makes the demonstrations more effective
*** "trust" each notebook
** Check that dependencies are installed
   In practice this probably means to ensure that you start the presentation
   from the correct virtual machine.
** Remove the .hypothesis directory
** Have cosmic-ray terminal session ready
   Including ready access to an editor for creating survivors.

   It's probably best to do it with a celery worker since that seems to do
   things concurrently. And it's cool.
* Workshop

** Codebase ideas

   I need some code bases to work with in the workshop. Here are some the
   qualities I think are important:

 - easily available / installable
 - easy to understand / accessible. Don't want to spend a lot of time understanding it.
 - easy to understand testing requirements
 - minimal dependencies and infrastructure, i.e. "just some code"
 - involves exceptions somewhere
 - is amenable to mocking somehow, i.e. it has some parameterized algorithm or something
 - is amenable to hypothesis testing, i.e. it has some element which can be "validated" by throwing lots of input at it.

 Using something from the standard library is probably a good idea. Everyone will have it, it'll be documented, and it'll be approachable. Candidates:

 - difflib
 - datetime
 - heapq
 - itertools
 - pathlib
 - scheduler

*** Timezone calculation
    Rob thought that a timezone-related testing problem would be interesting.
    for example, we need to calculate the correct end-time for a coupon so that
    all relevant timezones have access to it until at least midnight their time.
    Simple, easy to explain, and easy to test.
